package chapter06;

//클래스 외부 : 패키지 임포트 외부 클래스

public class Object01 {
	
	//클래스 내부 
	// 필드(멤버변수)	 : 클래스 블락에서 선언된 변수 
	//				메소드내에서 선언한 변수를 지역변수 
	// 메소드(멤버메소드)	 : 함수를 객체지향 언어레서는 메소드라 칭함  void main(){ }
	// 생성자 		 : 객체를 생성할 때 필드의 값을 초기화 시켜주는 작업
	//				   - 객체이름과 동일한 이름의 메소드
	//				   - 리턴 타입이 있으면 안됨
	// 내부 클래스 		 : 클래스 내부의 클래스 (Inner Class)

	
	public static void main(String[] args) {
		// 절차 지향 프로그램 : C / 
			// 장점 : 성능이 매우 우수 OS(window,/Liunx/Unix) <== C/ C++ 
			// 단점 : 프로스래밍 하기 어렵다.
			// 		유지 보수가 어렵다.
			// 		문제가 생겼을 때 전체 코드를 모두 수정
		
		// 객체 지향 프로그램 : Java / C++
			// 장점 : 모든 것들을 객체화 해서 프로그래밍
			//		코드가 간결
			//		문제가 생겼을 때 / 수정사항이 생겼을 때 / 유지 보수가 쉽다.
			//		완성된 프로그램은 각각의 객체를 조합해서 완성
			// 단점 : 성능이 정차지향보다 느릴 수 있다. 
		
		
		//클래스 (class) : 객체를 생성하기 위한 틀, 
		//객체 (Object) : 	인스턴스 (instance) :class를 기준으로 생성된 메모리에서 실행되는 프로그램 
		
		//클래스 외부에 올 수 있는 3가지 :
			//1, 패키지(package)	- 클래스를 조직화하는 폴더
			//2, 인포트(import)	- 동일한 패키지에 존재하지 않는 클래스는 인포트를 통해 클래스를 넣어야 한다. 
			//3, 외부클래스			
		
		
		//클래스 내부에 올 수 있는 4가지 : 
			//1,
		
		
		
		
	}
}
